<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:ChatGPT.UI.ViewModels"
             xmlns:views="clr-namespace:ChatGPT.UI.Views"
             xmlns:objectModel="clr-namespace:System.Collections.ObjectModel;assembly=System.ObjectModel"
             mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="700"
             x:Class="ChatGPT.UI.Views.MainView"
             x:CompileBindings="True" x:DataType="vm:MainViewModel">
  <Design.DataContext>
    <vm:MainViewModel>
      <vm:MainViewModel.Messages>
        <objectModel:ObservableCollection x:TypeArguments="vm:MessageViewModel">
          <vm:MessageViewModel>
            <vm:MessageViewModel.Prompt></vm:MessageViewModel.Prompt>
            <vm:MessageViewModel.Message>Hi! I'm Clippy, your Windows Assistant. Would you like to get some assistance?</vm:MessageViewModel.Message>
            <vm:MessageViewModel.IsSent>False</vm:MessageViewModel.IsSent>
            <vm:MessageViewModel.IsAwaiting>False</vm:MessageViewModel.IsAwaiting>
            <vm:MessageViewModel.IsError>False</vm:MessageViewModel.IsError>
            <vm:MessageViewModel.CanRemove>False</vm:MessageViewModel.CanRemove>
          </vm:MessageViewModel>
          <vm:MessageViewModel>
            <vm:MessageViewModel.Prompt></vm:MessageViewModel.Prompt>
            <vm:MessageViewModel.Message>Hi! I'm Clippy, your Windows Assistant. Would you like to get some assistance?</vm:MessageViewModel.Message>
            <vm:MessageViewModel.IsSent>True</vm:MessageViewModel.IsSent>
            <vm:MessageViewModel.IsAwaiting>False</vm:MessageViewModel.IsAwaiting>
            <vm:MessageViewModel.IsError>False</vm:MessageViewModel.IsError>
            <vm:MessageViewModel.CanRemove>False</vm:MessageViewModel.CanRemove>
          </vm:MessageViewModel>
          <vm:MessageViewModel>
            <vm:MessageViewModel.Prompt>This is prompt</vm:MessageViewModel.Prompt>
            <vm:MessageViewModel.Message>This is message</vm:MessageViewModel.Message>
            <vm:MessageViewModel.IsSent>False</vm:MessageViewModel.IsSent>
            <vm:MessageViewModel.IsAwaiting>False</vm:MessageViewModel.IsAwaiting>
            <vm:MessageViewModel.IsError>False</vm:MessageViewModel.IsError>
            <vm:MessageViewModel.CanRemove>True</vm:MessageViewModel.CanRemove>
            <vm:MessageViewModel.Result>
              <vm:MessageViewModel />
            </vm:MessageViewModel.Result>
          </vm:MessageViewModel>
          <vm:MessageViewModel>
            <vm:MessageViewModel.Prompt>This is prompt</vm:MessageViewModel.Prompt>
            <vm:MessageViewModel.Message>This is message</vm:MessageViewModel.Message>
            <vm:MessageViewModel.IsSent>True</vm:MessageViewModel.IsSent>
            <vm:MessageViewModel.IsAwaiting>True</vm:MessageViewModel.IsAwaiting>
            <vm:MessageViewModel.IsError>False</vm:MessageViewModel.IsError>
            <vm:MessageViewModel.CanRemove>True</vm:MessageViewModel.CanRemove>
            <vm:MessageViewModel.Result>
              <x:Null />
            </vm:MessageViewModel.Result>
          </vm:MessageViewModel>
          <vm:MessageViewModel>
            <vm:MessageViewModel.Prompt>This is prompt</vm:MessageViewModel.Prompt>
            <vm:MessageViewModel.Message>This is message</vm:MessageViewModel.Message>
            <vm:MessageViewModel.IsSent>True</vm:MessageViewModel.IsSent>
            <vm:MessageViewModel.IsAwaiting>False</vm:MessageViewModel.IsAwaiting>
            <vm:MessageViewModel.IsError>False</vm:MessageViewModel.IsError>
            <vm:MessageViewModel.CanRemove>True</vm:MessageViewModel.CanRemove>
            <vm:MessageViewModel.Result>
              <vm:MessageViewModel />
            </vm:MessageViewModel.Result>
          </vm:MessageViewModel>
          <vm:MessageViewModel>
            <vm:MessageViewModel.Prompt>This is prompt</vm:MessageViewModel.Prompt>
            <vm:MessageViewModel.Message>This is message</vm:MessageViewModel.Message>
            <vm:MessageViewModel.IsSent>True</vm:MessageViewModel.IsSent>
            <vm:MessageViewModel.IsAwaiting>False</vm:MessageViewModel.IsAwaiting>
            <vm:MessageViewModel.IsError>False</vm:MessageViewModel.IsError>
            <vm:MessageViewModel.CanRemove>True</vm:MessageViewModel.CanRemove>
            <vm:MessageViewModel.Result>
              <x:Null />
            </vm:MessageViewModel.Result>
          </vm:MessageViewModel>
        </objectModel:ObservableCollection>
      </vm:MainViewModel.Messages>
    </vm:MainViewModel>
  </Design.DataContext>
  <Grid Margin="12"
        RowDefinitions="*,Auto"
        ColumnDefinitions="*,Auto"
        ShowGridLines="False">
    <ScrollViewer Grid.Row="0"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  VerticalAlignment="Top">
      <SelectingItemsControl Items="{Binding Messages}"
                             SelectedItem="{Binding CurrentMessage}"
                             AutoScrollToSelectedItem="True">
        <SelectingItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <VirtualizingStackPanel />
          </ItemsPanelTemplate>
        </SelectingItemsControl.ItemsPanel>
        <SelectingItemsControl.DataTemplates>
          <DataTemplate DataType="vm:MessageViewModel">
            <views:MessageView Margin="2,0,6,0" />
          </DataTemplate>
        </SelectingItemsControl.DataTemplates>
      </SelectingItemsControl>
    </ScrollViewer>
    <StackPanel Grid.Column="0"
                Grid.Row="1"
                Orientation="Horizontal">
      <Button Name="SettingsButton"
              VerticalAlignment="Bottom"
              BorderBrush="#00000000"
              BorderThickness="2"
              Background="#00FFFFFF"
              CornerRadius="4"
              Padding="12"
              Margin="0,16,0,0">
        <Button.Flyout>
          <Flyout>
            <views:SettingsView DataContext="{Binding Settings}" />
          </Flyout>
        </Button.Flyout>
        <PathIcon Data="{DynamicResource SettingsIcon}"
                  Width="24"
                  Height="24"
                  Opacity="0.5"
                  Foreground="{DynamicResource SettingsIconBrush}" />
      </Button>
      <Button Name="ThemeButton"
              Click="ThemeButton_OnClick"
              VerticalAlignment="Bottom"
              BorderBrush="#00000000"
              BorderThickness="2"
              Background="#00FFFFFF"
              CornerRadius="4"
              Padding="12"
              Margin="0,16,0,0">
        <PathIcon Data="{DynamicResource DarkThemeIcon}"
                  Width="24"
                  Height="24"
                  Opacity="0.5"
                  Foreground="{DynamicResource ThemeIconBrush}" />
      </Button>
    </StackPanel>
    <Image Grid.Column="1"
           Grid.Row="1"
           Name="ClippyImage"
           Height="100"
           Margin="-32,2,0,0"
           Source="/Assets/clipart855284.png"/>
  </Grid>
</UserControl>
